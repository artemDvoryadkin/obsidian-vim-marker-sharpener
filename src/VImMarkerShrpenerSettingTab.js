import { __awaiter } from "tslib";
import { PluginSettingTab, Setting, TFolder, FuzzySuggestModal, Notice } from 'obsidian';
// Значения по умолчанию
export const DEFAULT_SETTINGS = {
    textOption: "Default Text",
    numberOption: 10,
    folderOption: "/",
    outputDirForPdfToMd: "PdfToMd",
    markerSinglePath: "",
    marker_version: "0.0.0",
};
// Вкладка настроек
export class VimMarkerSharpenerSettingTab extends PluginSettingTab {
    constructor(app, plugin) {
        super(app, plugin);
        this.plugin = plugin;
    }
    display() {
        const { containerEl } = this;
        containerEl.empty();
        // Текстовое поле
        new Setting(containerEl)
            .setName("Директория для сохрания MD файлов")
            .setDesc("Введите директорию для сохрания MD файлов<br>По умолчанию: PdfToMd")
            .then(setting => {
            setting.descEl.style.display = "block"; // Описание на отдельной строке
            setting.descEl.style.marginBottom = "4px"; // Отступ перед полем ввода
            setting.addText(text => text
                .setPlaceholder("Введите что-то")
                .setValue(this.plugin.settings.textOption)
                .onChange((value) => __awaiter(this, void 0, void 0, function* () {
                this.plugin.settings.textOption = value;
                yield this.plugin.saveSettings();
                // check environment
                // Check if the directory exists, if not, create it
                if (!this.plugin.app.vault.getAbstractFileByPath(value)) {
                    yield this.plugin.app.vault.createFolder(value);
                }
            })));
        });
        // Верисия Marker_pdf
        new Setting(containerEl)
            .setTooltip("Верисия Marker_pdf")
            .setName("Верисия Marker_pdf")
            .setDesc("Версия установленной библиотеки")
            .addText((text) => text
            .setPlaceholder("Версия установленной библиотеки")
            .setValue(this.plugin.settings.marker_version)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.marker_version = value;
            yield this.plugin.saveSettings();
        })));
        // Текстовое поле
        new Setting(containerEl)
            .setTooltip("Введите путь где находиться библиотека Marker_pdf")
            .setName("Путь где находиться библиотека Marker_pdf")
            .setDesc("Введите путь где находиться библиотека Marker_pdf")
            .addText((text) => text
            .setPlaceholder("Введите путь где находиться библиотека Marker_pdf")
            .setValue(this.plugin.settings.markerSinglePath)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.markerSinglePath = value;
            yield this.plugin.saveSettings();
        })));
        // Числовое поле
        new Setting(containerEl)
            .setName("Числовая опция")
            .setDesc("Введите число")
            .addText((text) => text
            .setPlaceholder("Введите число")
            .setValue(this.plugin.settings.numberOption.toString())
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            const num = Number(value);
            if (!isNaN(num)) {
                this.plugin.settings.numberOption = num;
                yield this.plugin.saveSettings();
            }
        })));
        // Выбор директории
        new Setting(containerEl)
            .setName("Выберите папку")
            .setDesc("Укажите папку внутри хранилища Obsidian")
            .addDropdown((dropdown) => {
            const folders = this.getFolders();
            folders.forEach((folder) => dropdown.addOption(folder, folder));
            dropdown
                .setValue(this.plugin.settings.folderOption)
                .onChange((value) => __awaiter(this, void 0, void 0, function* () {
                this.plugin.settings.folderOption = value;
                yield this.plugin.saveSettings();
            }));
        });
    }
    showFolderSelection() {
        const folders = this.getFolders();
        //	this.app.commands.executeCommandById("app:open-command-palette");
        new MySuggestModal(this.app, folders, (selectedFolder) => {
            this.plugin.settings.folderOption = selectedFolder;
            this.plugin.saveSettings();
            new Notice(`Выбрана папка: ${selectedFolder}`);
        }).open();
    }
    // Получаем список папок в хранилище Obsidian
    getFolders() {
        const folders = [];
        const files = this.app.vault.getAllLoadedFiles();
        for (const file of files) {
            if (file instanceof TFolder) {
                folders.push(file.path);
            }
        }
        return folders;
    }
}
class MySuggestModal extends FuzzySuggestModal {
    constructor(app, items, callback) {
        super(app);
        this.callback = callback;
        this.setPlaceholder("Выберите папку...");
        this.setInstructions([{ command: "Enter", purpose: "Выбрать" }]);
        this.suggestions = items;
    }
    getItems() {
        return this.suggestions;
    }
    getItemText(item) {
        return item;
    }
    onChooseItem(item, evt) {
        this.callback(item);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVkltTWFya2VyU2hycGVuZXJTZXR0aW5nVGFiLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVkltTWFya2VyU2hycGVuZXJTZXR0aW5nVGFiLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsZ0JBQWdCLEVBQU8sT0FBTyxFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFhOUYsd0JBQXdCO0FBQ3hCLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFxQjtJQUNqRCxVQUFVLEVBQUUsY0FBYztJQUMxQixZQUFZLEVBQUUsRUFBRTtJQUNoQixZQUFZLEVBQUUsR0FBRztJQUNqQixtQkFBbUIsRUFBRSxTQUFTO0lBQzlCLGdCQUFnQixFQUFFLEVBQUU7SUFDcEIsY0FBYyxFQUFFLE9BQU87Q0FDdkIsQ0FBQztBQUVGLG1CQUFtQjtBQUNuQixNQUFNLE9BQU8sNEJBQTZCLFNBQVEsZ0JBQWdCO0lBR2pFLFlBQVksR0FBUSxFQUFFLE1BQXVCO1FBQzVDLEtBQUssQ0FBQyxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDdEIsQ0FBQztJQUVELE9BQU87UUFDTixNQUFNLEVBQUUsV0FBVyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQzdCLFdBQVcsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUVwQixpQkFBaUI7UUFDakIsSUFBSSxPQUFPLENBQUMsV0FBVyxDQUFDO2FBQ3RCLE9BQU8sQ0FBQyxtQ0FBbUMsQ0FBQzthQUM1QyxPQUFPLENBQUMsb0VBQW9FLENBQUM7YUFDN0UsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ2YsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxDQUFDLCtCQUErQjtZQUN2RSxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxZQUFZLEdBQUcsS0FB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bHVnaW5TZXR0aW5nVGFiLCBBcHAsIFNldHRpbmcsIFRGb2xkZXIsIEZ1enp5U3VnZ2VzdE1vZGFsLCBOb3RpY2UgfSBmcm9tICdvYnNpZGlhbic7XG5pbXBvcnQgVmltTWFya2VyUGx1Z2luIGZyb20gJy4vbWFpbic7XG5cbi8vINCY0L3RgtC10YDRhNC10LnRgSDQvdCw0YHRgtGA0L7QtdC6XG5leHBvcnQgaW50ZXJmYWNlIE15UGx1Z2luU2V0dGluZ3Mge1xuXHR0ZXh0T3B0aW9uOiBzdHJpbmc7XG5cdG51bWJlck9wdGlvbjogbnVtYmVyO1xuXHRmb2xkZXJPcHRpb246IHN0cmluZztcblx0b3V0cHV0RGlyRm9yUGRmVG9NZDogc3RyaW5nO1xuXHRtYXJrZXJTaW5nbGVQYXRoOiBzdHJpbmc7XG5cdG1hcmtlcl92ZXJzaW9uOiBzdHJpbmc7XG59XG5cbi8vINCX0L3QsNGH0LXQvdC40Y8g0L/QviDRg9C80L7Qu9GH0LDQvdC40Y5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1NFVFRJTkdTOiBNeVBsdWdpblNldHRpbmdzID0ge1xuXHR0ZXh0T3B0aW9uOiBcIkRlZmF1bHQgVGV4dFwiLFxuXHRudW1iZXJPcHRpb246IDEwLFxuXHRmb2xkZXJPcHRpb246IFwiL1wiLFxuXHRvdXRwdXREaXJGb3JQZGZUb01kOiBcIlBkZlRvTWRcIixcblx0bWFya2VyU2luZ2xlUGF0aDogXCJcIixcblx0bWFya2VyX3ZlcnNpb246IFwiMC4wLjBcIixcbn07XG5cbi8vINCS0LrQu9Cw0LTQutCwINC90LDRgdGC0YDQvtC10LpcbmV4cG9ydCBjbGFzcyBWaW1NYXJrZXJTaGFycGVuZXJTZXR0aW5nVGFiIGV4dGVuZHMgUGx1Z2luU2V0dGluZ1RhYiB7XG5cdHBsdWdpbjogVmltTWFya2VyUGx1Z2luO1xuXG5cdGNvbnN0cnVjdG9yKGFwcDogQXBwLCBwbHVnaW46IFZpbU1hcmtlclBsdWdpbikge1xuXHRcdHN1cGVyKGFwcCwgcGx1Z2luKTtcblx0XHR0aGlzLnBsdWdpbiA9IHBsdWdpbjtcblx0fVxuXG5cdGRpc3BsYXkoKSB7XG5cdFx0Y29uc3QgeyBjb250YWluZXJFbCB9ID0gdGhpcztcblx0XHRjb250YWluZXJFbC5lbXB0eSgpO1xuXG5cdFx0Ly8g0KLQtdC60YHRgtC+0LLQvtC1INC/0L7Qu9C1XG5cdFx0bmV3IFNldHRpbmcoY29udGFpbmVyRWwpXG5cdFx0XHQuc2V0TmFtZShcItCU0LjRgNC10LrRgtC+0YDQuNGPINC00LvRjyDRgdC+0YXRgNCw0L3QuNGPIE1EINGE0LDQudC70L7QslwiKVxuXHRcdFx0LnNldERlc2MoXCLQktCy0LXQtNC40YLQtSDQtNC40YDQtdC60YLQvtGA0LjRjiDQtNC70Y8g0YHQvtGF0YDQsNC90LjRjyBNRCDRhNCw0LnQu9C+0LI8YnI+0J/QviDRg9C80L7Qu9GH0LDQvdC40Y46IFBkZlRvTWRcIilcblx0XHRcdC50aGVuKHNldHRpbmcgPT4ge1xuXHRcdFx0XHRzZXR0aW5nLmRlc2NFbC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiOyAvLyDQntC/0LjRgdCw0L3QuNC1INC90LAg0L7RgtC00LXQu9GM0L3QvtC5INGB0YLRgNC+0LrQtVxuXHRcdFx0XHRzZXR0aW5nLmRlc2NFbC5zdHlsZS5tYXJnaW5Cb3R0b20gPSBcIjRweFwiOyAvLyDQntGC0YHRgtGD0L8g0L/QtdGA0LXQtCDQv9C+0LvQtdC8INCy0LLQvtC00LBcblx0XHRcdFx0c2V0dGluZy5hZGRUZXh0KHRleHQgPT4gdGV4dFxuXHRcdFx0XHRcdC5zZXRQbGFjZWhvbGRlcihcItCS0LLQtdC00LjRgtC1INGH0YLQvi3RgtC+XCIpXG5cdFx0XHRcdFx0LnNldFZhbHVlKHRoaXMucGx1Z2luLnNldHRpbmdzLnRleHRPcHRpb24pXG5cdFx0XHRcdFx0Lm9uQ2hhbmdlKGFzeW5jICh2YWx1ZSkgPT4ge1xuXHRcdFx0XHRcdFx0dGhpcy5wbHVnaW4uc2V0dGluZ3MudGV4dE9wdGlvbiA9IHZhbHVlO1xuXG5cdFx0XHRcdFx0XHRhd2FpdCB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcblx0XHRcdFx0XHRcdC8vIGNoZWNrIGVudmlyb25tZW50XG5cdFx0XHRcdFx0XHQvLyBDaGVjayBpZiB0aGUgZGlyZWN0b3J5IGV4aXN0cywgaWYgbm90LCBjcmVhdGUgaXRcblx0XHRcdFx0XHRcdGlmICghdGhpcy5wbHVnaW4uYXBwLnZhdWx0LmdldEFic3RyYWN0RmlsZUJ5UGF0aCh2YWx1ZSkpIHtcblx0XHRcdFx0XHRcdFx0YXdhaXQgdGhpcy5wbHVnaW4uYXBwLnZhdWx0LmNyZWF0ZUZvbGRlcih2YWx1ZSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSlcblx0XHRcdFx0KTtcblx0XHRcdH0pO1xuXG5cdFx0Ly8g0JLQtdGA0LjRgdC40Y8gTWFya2VyX3BkZlxuXHRcdG5ldyBTZXR0aW5nKGNvbnRhaW5lckVsKVxuXHRcdFx0LnNldFRvb2x0aXAoXCLQktC10YDQuNGB0LjRjyBNYXJrZXJfcGRmXCIpXG5cdFx0XHQuc2V0TmFtZShcItCS0LXRgNC40YHQuNGPIE1hcmtlcl9wZGZcIilcblx0XHRcdC5zZXREZXNjKFwi0JLQtdGA0YHQuNGPINGD0YHRgtCw0L3QvtCy0LvQtdC90L3QvtC5INCx0LjQsdC70LjQvtGC0LXQutC4XCIpXG5cdFx0XHQuYWRkVGV4dCgodGV4dCkgPT4gdGV4dFxuXHRcdFx0XHQuc2V0UGxhY2Vob2xkZXIoXCLQktC10YDRgdC40Y8g0YPRgdGC0LDQvdC+0LLQu9C10L3QvdC+0Lkg0LHQuNCx0LvQuNC+0YLQtdC60LhcIilcblx0XHRcdFx0LnNldFZhbHVlKHRoaXMucGx1Z2luLnNldHRpbmdzLm1hcmtlcl92ZXJzaW9uKVxuXHRcdFx0XHQub25DaGFuZ2UoYXN5bmMgKHZhbHVlKSA9PiB7XG5cdFx0XHRcdFx0dGhpcy5wbHVnaW4uc2V0dGluZ3MubWFya2VyX3ZlcnNpb24gPSB2YWx1ZTtcblx0XHRcdFx0XHRhd2FpdCB0aGlzLnBsdWdpbi5zYXZlU2V0dGluZ3MoKTtcblx0XHRcdFx0fSlcblx0XHRcdCk7XG5cblx0XHQvLyDQotC10LrRgdGC0L7QstC+0LUg0L/QvtC70LVcblx0XHRuZXcgU2V0dGluZyhjb250YWluZXJFbClcblx0XHRcdC5zZXRUb29sdGlwKFwi0JLQstC10LTQuNGC0LUg0L/Rg9GC0Ywg0LPQtNC1INC90LDRhdC+0LTQuNGC0YzRgdGPINCx0LjQsdC70LjQvtGC0LXQutCwIE1hcmtlcl9wZGZcIilcblx0XHRcdC5zZXROYW1lKFwi0J/Rg9GC0Ywg0LPQtNC1INC90LDRhdC+0LTQuNGC0YzRgdGPINCx0LjQsdC70LjQvtGC0LXQutCwIE1hcmtlcl9wZGZcIilcblx0XHRcdC5zZXREZXNjKFwi0JLQstC10LTQuNGC0LUg0L/Rg9GC0Ywg0LPQtNC1INC90LDRhdC+0LTQuNGC0YzRgdGPINCx0LjQsdC70LjQvtGC0LXQutCwIE1hcmtlcl9wZGZcIilcblx0XHRcdC5hZGRUZXh0KCh0ZXh0KSA9PiB0ZXh0XG5cdFx0XHRcdC5zZXRQbGFjZWhvbGRlcihcItCS0LLQtdC00LjRgtC1INC/0YPRgtGMINCz0LTQtSDQvdCw0YXQvtC00LjRgtGM0YHRjyDQsdC40LHQu9C40L7RgtC10LrQsCBNYXJrZXJfcGRmXCIpXG5cdFx0XHRcdC5zZXRWYWx1ZSh0aGlzLnBsdWdpbi5zZXR0aW5ncy5tYXJrZXJTaW5nbGVQYXRoKVxuXHRcdFx0XHQub25DaGFuZ2UoYXN5bmMgKHZhbHVlKSA9PiB7XG5cdFx0XHRcdFx0dGhpcy5wbHVnaW4uc2V0dGluZ3MubWFya2VyU2luZ2xlUGF0aCA9IHZhbHVlO1xuXHRcdFx0XHRcdGF3YWl0IHRoaXMucGx1Z2luLnNhdmVTZXR0aW5ncygpO1xuXHRcdFx0XHR9KVxuXHRcdFx0KTtcblxuXHRcdC8vINCn0LjRgdC70L7QstC+0LUg0L/QvtC70LVcblx0XHRuZXcgU2V0dGluZyhjb250YWluZXJFbClcblx0XHRcdC5zZXROYW1lKFwi0KfQuNGB0LvQvtCy0LDRjyDQvtC/0YbQuNGPXCIpXG5cdFx0XHQuc2V0RGVzYyhcItCS0LLQtdC00LjRgtC1INGH0LjRgdC70L5cIilcblx0XHRcdC5hZGRUZXh0KCh0ZXh0KSA9PiB0ZXh0XG5cdFx0XHRcdC5zZXRQbGFjZWhvbGRlcihcItCS0LLQtdC00LjRgtC1INGH0LjRgdC70L5cIilcblx0XHRcdFx0LnNldFZhbHVlKHRoaXMucGx1Z2luLnNldHRpbmdzLm51bWJlck9wdGlvbi50b1N0cmluZygpKVxuXHRcdFx0XHQub25DaGFuZ2UoYXN5bmMgKHZhbHVlKSA9PiB7XG5cdFx0XHRcdFx0Y29uc3QgbnVtID0gTnVtYmVyKHZhbHVlKTtcblx0XHRcdFx0XHRpZiAoIWlzTmFOKG51bSkpIHtcblx0XHRcdFx0XHRcdHRoaXMucGx1Z2luLnNldHRpbmdzLm51bWJlck9wdGlvbiA9IG51bTtcblx0XHRcdFx0XHRcdGF3YWl0IHRoaXMucGx1Z2luLnNhdmVTZXR0aW5ncygpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSlcblx0XHRcdCk7XG5cblx0XHQvLyDQktGL0LHQvtGAINC00LjRgNC10LrRgtC+0YDQuNC4XG5cdFx0bmV3IFNldHRpbmcoY29udGFpbmVyRWwpXG5cdFx0XHQuc2V0TmFtZShcItCS0YvQsdC10YDQuNGC0LUg0L/QsNC/0LrRg1wiKVxuXHRcdFx0LnNldERlc2MoXCLQo9C60LDQttC40YLQtSDQv9Cw0L/QutGDINCy0L3Rg9GC0YDQuCDRhdGA0LDQvdC40LvQuNGJ0LAgT2JzaWRpYW5cIilcblx0XHRcdC5hZGREcm9wZG93bigoZHJvcGRvd24pID0+IHtcblx0XHRcdFx0Y29uc3QgZm9sZGVycyA9IHRoaXMuZ2V0Rm9sZGVycygpO1xuXHRcdFx0XHRmb2xkZXJzLmZvckVhY2goKGZvbGRlcikgPT4gZHJvcGRvd24uYWRkT3B0aW9uKGZvbGRlciwgZm9sZGVyKSk7XG5cblx0XHRcdFx0ZHJvcGRvd25cblx0XHRcdFx0XHQuc2V0VmFsdWUodGhpcy5wbHVnaW4uc2V0dGluZ3MuZm9sZGVyT3B0aW9uKVxuXHRcdFx0XHRcdC5vbkNoYW5nZShhc3luYyAodmFsdWUpID0+IHtcblx0XHRcdFx0XHRcdHRoaXMucGx1Z2luLnNldHRpbmdzLmZvbGRlck9wdGlvbiA9IHZhbHVlO1xuXHRcdFx0XHRcdFx0YXdhaXQgdGhpcy5wbHVnaW4uc2F2ZVNldHRpbmdzKCk7XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblx0fVxuXHRzaG93Rm9sZGVyU2VsZWN0aW9uKCkge1xuXHRcdGNvbnN0IGZvbGRlcnMgPSB0aGlzLmdldEZvbGRlcnMoKTtcblxuXHRcdC8vXHR0aGlzLmFwcC5jb21tYW5kcy5leGVjdXRlQ29tbWFuZEJ5SWQoXCJhcHA6b3Blbi1jb21tYW5kLXBhbGV0dGVcIik7XG5cblx0XHRuZXcgTXlTdWdnZXN0TW9kYWwodGhpcy5hcHAsIGZvbGRlcnMsIChzZWxlY3RlZEZvbGRlcjogc3RyaW5nKSA9PiB7XG5cdFx0XHR0aGlzLnBsdWdpbi5zZXR0aW5ncy5mb2xkZXJPcHRpb24gPSBzZWxlY3RlZEZvbGRlcjtcblx0XHRcdHRoaXMucGx1Z2luLnNhdmVTZXR0aW5ncygpO1xuXHRcdFx0bmV3IE5vdGljZShg0JLRi9Cx0YDQsNC90LAg0L/QsNC/0LrQsDogJHtzZWxlY3RlZEZvbGRlcn1gKTtcblx0XHR9KS5vcGVuKCk7XG5cdH1cblx0Ly8g0J/QvtC70YPRh9Cw0LXQvCDRgdC/0LjRgdC+0Log0L/QsNC/0L7QuiDQsiDRhdGA0LDQvdC40LvQuNGJ0LUgT2JzaWRpYW5cblx0Z2V0Rm9sZGVycygpOiBzdHJpbmdbXSB7XG5cdFx0Y29uc3QgZm9sZGVyczogc3RyaW5nW10gPSBbXTtcblx0XHRjb25zdCBmaWxlcyA9IHRoaXMuYXBwLnZhdWx0LmdldEFsbExvYWRlZEZpbGVzKCk7XG5cblx0XHRmb3IgKGNvbnN0IGZpbGUgb2YgZmlsZXMpIHtcblx0XHRcdGlmIChmaWxlIGluc3RhbmNlb2YgVEZvbGRlcikge1xuXHRcdFx0XHRmb2xkZXJzLnB1c2goZmlsZS5wYXRoKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZm9sZGVycztcblx0fVxufVxuXG5jbGFzcyBNeVN1Z2dlc3RNb2RhbCBleHRlbmRzIEZ1enp5U3VnZ2VzdE1vZGFsPHN0cmluZz4ge1xuXHRwcml2YXRlIGNhbGxiYWNrOiAoY2hvaWNlOiBzdHJpbmcpID0+IHZvaWQ7XG5cdHByaXZhdGUgc3VnZ2VzdGlvbnM6IHN0cmluZ1tdO1xuXG5cdGNvbnN0cnVjdG9yKGFwcDogQXBwLCBpdGVtczogc3RyaW5nW10sIGNhbGxiYWNrOiAoY2hvaWNlOiBzdHJpbmcpID0+IHZvaWQpIHtcblx0XHRzdXBlcihhcHApO1xuXHRcdHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcblx0XHR0aGlzLnNldFBsYWNlaG9sZGVyKFwi0JLRi9Cx0LXRgNC40YLQtSDQv9Cw0L/QutGDLi4uXCIpO1xuXHRcdHRoaXMuc2V0SW5zdHJ1Y3Rpb25zKFt7IGNvbW1hbmQ6IFwiRW50ZXJcIiwgcHVycG9zZTogXCLQktGL0LHRgNCw0YLRjFwiIH1dKTtcblx0XHR0aGlzLnN1Z2dlc3Rpb25zID0gaXRlbXM7XG5cdH1cblxuXHRnZXRJdGVtcygpOiBzdHJpbmdbXSB7XG5cdFx0cmV0dXJuIHRoaXMuc3VnZ2VzdGlvbnM7XG5cdH1cblxuXHRnZXRJdGVtVGV4dChpdGVtOiBzdHJpbmcpOiBzdHJpbmcge1xuXHRcdHJldHVybiBpdGVtO1xuXHR9XG5cblx0b25DaG9vc2VJdGVtKGl0ZW06IHN0cmluZywgZXZ0OiBNb3VzZUV2ZW50IHwgS2V5Ym9hcmRFdmVudCkge1xuXHRcdHRoaXMuY2FsbGJhY2soaXRlbSk7XG5cdH1cbn1cblxuXG4iXX0=